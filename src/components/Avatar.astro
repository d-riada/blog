---
// Avatar.astro â€“ A component with eye-following animation

const clickableImages = [
  { src: "/art.svg", alt: "Image 1", link: "#" },
  { src: "/writing.svg", alt: "Image 2", link: "#" },
  { src: "/applications.svg", alt: "Image 3", link: "#" }
];
---

<style>
  svg {
    width: 300px;
    height: 200px;
  }

  .container {
    position: relative;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .avatar-container {
    position: relative;
    font-size: 80px;
    text-align: center;
    z-index: 10;
  } 

  .images-ring {
    position: absolute;
    width: 4vw;
    height: 4vh;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .cls-1 {
    fill: #fff;
  }

  .cls-2 {
    stroke-width: .82px;
  }

  .cls-2, .cls-3, .cls-4, .cls-5, .cls-6, .cls-7, .cls-8, .cls-9 {
    stroke: #000;
    stroke-miterlimit: 10;
  }

  .cls-4 {
    fill: #50c8ff;
    stroke-width: 10.44px;
  }

  .cls-5 {
    fill: #ffebd4;
  }

  .cls-5, .cls-7 {
    stroke-width: 10px;
  }

  .cls-6 {
    fill: #ff0;
    stroke-width: 10.56px;
  }

  .cls-7 {
    fill: none;
    stroke-linecap: round;
  }

  .cls-8 {
    stroke-width: .89px;
  }

  .cls-9 {
    stroke-width: .85px;
  }

</style>


<div class="container">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1655.84 1116.6" class="avatar-container">
        <g id="Face">
            <ellipse id="Left_Eye_Ball" class="cls-1" cx="507.75" cy="499.58" rx="230.81" ry="216.51"/>
            <ellipse id="Right_Eye_Ball" class="cls-1" cx="1128.68" cy="502.64" rx="230.81" ry="216.51"/>
            <circle id="Left_Eye_iris" class="cls-4" cx="512.15" cy="480.37" r="68.43"/>
            <circle id="Right_Eye_iris" class="cls-4" cx="1122.88" cy="480.37" r="68.43"/>
            <path id="Face_path" class="cls-5" d="M1436.01,358.97c-49.63-107.64-213.37-160.76-317.91-194.03-89.55-28.5-182.09-28.73-296.97-28.46-112.65,.26-203.03-.04-309.01,32.94-105.3,32.77-266.89,83.19-311.94,208.96-47.54,132.72-22.39,226.87,7.46,291.04,37.9,81.48,120.38,104.25,222.39,122.39,98.51,17.52,148.37,16.36,391.1,16.91,247.81,.55,289.51,.13,383.54-18.4,103.4-20.37,203.13-52.04,235.81-122.39,26.14-56.27,58.62-172.13-4.47-308.96Zm-707.49,187.62c-2.39,3.39-6.88,6.69-72.51,8.17-32.09,.72-48.51,.51-48.51,.51-37.25-.48-66.08-.86-112.24-3.13-48.06-2.36-79.36-5.03-112.95-10.15-6.55-1-19.85-3.1-36.77-8.17-33.09-9.91-60.02-17.98-64.34-34.72-6.49-25.14,40.87-58.65,65.87-70.47,19.25-9.1,41.87-13.79,41.87-13.79,10.6-2.2,19.08-3.02,24.98-3.5,31.07-2.5,54.58-.51,98.96,1.19,34.89,1.34,47.96,1.16,71.91,4.74,15.73,2.35,25.11,4.67,30.88,6.25,23.07,6.3,41.58,15.23,50.55,20.43,41.09,23.82,76.59,82.39,62.3,102.64Zm630.79-50.55c-4.32,16.74-31.25,24.81-64.34,34.72-16.92,5.07-30.22,7.17-36.77,8.17-33.6,5.12-64.89,7.79-112.95,10.15-46.16,2.27-74.99,2.64-112.24,3.13,0,0-16.42,.21-48.51-.51-65.63-1.48-70.12-4.78-72.51-8.17-14.3-20.25,21.21-78.82,62.3-102.64,8.97-5.2,27.48-14.12,50.55-20.43,5.77-1.58,15.15-3.9,30.88-6.25,23.94-3.58,37.01-3.4,71.91-4.74,44.38-1.7,67.89-3.7,98.96-1.19,5.9,.48,14.38,1.3,24.98,3.5,0,0,22.62,4.69,41.87,13.79,25,11.82,72.36,45.33,65.87,70.47Z"/>
        </g>
        <g id="Hair">
            <path id="Hair_path" class="cls-6" d="M816.57,257.11c-132.78-1.55-137.04-20.62-217.6-12.21-71.01,7.41-163.31,17.04-237.11,94.18-80.74,84.39-96.45,204.74-102.05,247.67-9.26,70.96,2.18,94.77,0,317.44-.72,73.07-2.22,98.64-18.01,125.58-45.06,76.91-169.41,101.58-219.1,47.09-30.59-33.54-17.26-79.92,12.01-310.46,34.77-273.9,26.83-293.99,55.53-378.48,29.45-86.72,63.37-186.59,147.07-263.37C412.92-36.55,689.99,11.99,741.53,28.62c7.89,2.54,37.06,12.91,76.54,12.21,38.26-.68,66.27-11.41,73.53-13.95,56.07-19.65,353.53-69.73,531.25,109.88,68.93,69.66,97.02,150.81,130.56,247.67,34.35,99.2,24.91,125.26,64.53,399.41,31.38,217.14,46.21,262.42,16.51,296.51-48.69,55.87-174.94,33.41-225.11-45.35-14.26-22.39-20.23-45.96-25.51-127.32-12.13-186.87,8.41-231.51-6-331.39-7.96-55.18-22.08-153.02-87.04-226.74-74.44-84.48-177.06-93.51-264.12-101.16-82.98-7.3-82.7,10.21-210.1,8.72Z"/>
        </g>
        <g id="Right_Eye">
            <path id="Right_Eye_lash_up_1_path" class="cls-9" d="M1027.55,417.85c-6.15-1.16-5.94-9.34-8.27-28.77-.64-5.34-1.55-12.97-3-21.41-1.37-7.96-2.62-15.25-5.06-24.65-4.01-15.45-7.28-21.41-2.45-25.16,2.49-1.93,6.75-2.98,10.13-2.29,6.41,1.32,7.01,8.38,11.93,25.7,2.04,7.2,4.5,14.31,6.75,21.46,2.78,8.86,5.21,17.79,8.29,26.57,5.17,14.71,8.86,21.86,4.24,25.04-1.59,1.09-4.74,1.55-11.03,2.53-5.59,.87-9.17,1.42-11.52,.98Z"/>
            <path id="Right_Eye_lash_up_2_path" class="cls-2" d="M1204.66,406.91c-3.22-1.77-2.17-8.55-1.23-25.04,.26-4.53,.63-11,.8-18.22,.16-6.81,.31-13.04,.05-21.18-.42-13.39-1.53-18.78,1.53-21.27,1.58-1.29,4.02-1.6,5.78-.58,3.34,1.94,2.86,7.9,3.57,22.96,.29,6.26,.82,12.5,1.23,18.75,.5,7.74,.81,15.5,1.49,23.21,1.14,12.93,2.34,19.36-.55,21.41-.99,.7-2.76,.68-6.3,.67-3.14,0-5.16-.01-6.38-.69Z"/>
            <path id="Right_Eye_lash_down_1_path" class="cls-8" d="M1056.12,551.59c-4.3,.86-3.65,14.28-3.86,31.93-.13,10.22-.48,16.45,3.41,18.07,2.46,1.02,5.35-.34,5.51-.42,4.71-2.31,4.28-8.67,4.86-19.48,.9-16.49,3.4-28.98-.49-30.06-.34-.1-.36,0-4.54,0-4.38,0-4.47-.11-4.89-.03Z"/>
            <path id="Right_Eye_lash_down_2_path" class="cls-3" d="M1238.31,541.61c-4.2,1.95-.18,17.64,4.01,38.51,2.43,12.08,3.62,19.51,8.01,20.57,2.78,.67,5.41-1.57,5.56-1.7,4.26-3.75,2.22-11.16,.13-24.04-3.2-19.65-3.75-34.93-8.01-35.36-.38-.04-.37,.08-4.66,.99-4.5,.95-4.62,.84-5.03,1.03Z"/>
        </g>
        <g id="Left_Eye">
            <path id="Left_Eye_lash_up_1_path" class="cls-9" d="M614.76,420.9c6.15-1.16,5.94-9.34,8.27-28.77,.64-5.34,1.55-12.97,3-21.41,1.37-7.96,2.62-15.25,5.06-24.65,4.01-15.45,7.28-21.41,2.45-25.16-2.49-1.93-6.75-2.98-10.13-2.29-6.41,1.32-7.01,8.38-11.93,25.7-2.04,7.2-4.5,14.31-6.75,21.46-2.78,8.86-5.21,17.79-8.29,26.57-5.17,14.71-8.86,21.86-4.24,25.04,1.59,1.09,4.74,1.55,11.03,2.53,5.59,.87,9.17,1.42,11.52,.98Z"/>
            <path id="Left_Eye_lash_up_2_path" class="cls-2" d="M437.65,409.96c3.22-1.77,2.17-8.55,1.23-25.04-.26-4.53-.63-11-.8-18.22-.16-6.81-.31-13.04-.05-21.18,.42-13.39,1.53-18.78-1.53-21.27-1.58-1.29-4.02-1.6-5.78-.58-3.34,1.94-2.86,7.9-3.57,22.96-.29,6.26-.82,12.5-1.23,18.75-.5,7.74-.81,15.5-1.49,23.21-1.14,12.93-2.34,19.36,.55,21.41,.99,.7,2.76,.68,6.3,.67,3.14,0,5.16-.01,6.38-.69Z"/>
            <path id="Left_Eye_lash_down_1_path" class="cls-8" d="M586.19,554.64c4.3,.86,3.65,14.28,3.86,31.93,.13,10.22,.48,16.45-3.41,18.07-2.46,1.02-5.35-.34-5.51-.42-4.71-2.31-4.28-8.67-4.86-19.48-.9-16.49-3.4-28.98,.49-30.06,.34-.1,.36,0,4.54,0,4.38,0,4.47-.11,4.89-.03Z"/>
            <path id="Left_Eye_lash_down_2_path" class="cls-3" d="M404,544.67c4.2,1.95,.18,17.64-4.01,38.51-2.43,12.08-3.62,19.51-8.01,20.57-2.78,.67-5.41-1.57-5.56-1.7-4.26-3.75-2.22-11.16-.13-24.04,3.2-19.65,3.75-34.93,8.01-35.36,.38-.04,.37,.08,4.66,.99,4.5,.95,4.62,.84,5.03,1.03Z"/>
        </g>
        <g id="Mouth">
            <path id="Mouth_path" class="cls-7" d="M955.07,630.3c.51,5.11-3.35,17.92-12.26,26.55-10.27,9.95-23.64,11.12-32.17,11.74-43.85,3.21-82.03,3.07-84.26,3.06-22.69-.08-47.61,.73-85.28-2.04-13.88-1.02-29.37-2.52-40.34-14.3-8.16-8.75-11.74-19.59-11.23-26.55"/>
        </g>
    </svg>
        
    <div class="images-ring">
        {clickableImages.map((img, i) => {
            const angle = (i / clickableImages.length) * 2 * Math.PI;
            const radius = 320;
            const center = 30;
            const x = center + Math.cos(angle) * radius;
            const y = center + Math.sin(angle) * radius;

            return (
            <a
                href={img.link}
                style={`position: absolute; left: ${x - 30}px; top: ${y - 30}px;`}
            >
                <img src={img.src} alt={img.alt} width="150" height="150" />
            </a>
            );
        })}
    </div>
</div>

<script is:inline>
  if (typeof window !== "undefined") {
    document.addEventListener('mousemove', (e) => {
      const svg = document.querySelector('.avatar-container');
      if (!svg) return;

      const rect = svg.getBoundingClientRect();
      const mouseX = e.clientX - rect.left;
      const mouseY = e.clientY - rect.top;

      // Create a point in screen space
      const pt = svg.createSVGPoint();
      pt.x = e.clientX;
      pt.y = e.clientY;

      // Convert to SVG space
      const svgPoint = pt.matrixTransform(svg.getScreenCTM().inverse());

      const eyes = [
        { cx: 505.87, cy: 482.01, pupil: document.getElementById('Left_Eye_iris') },
        { cx: 1134.91, cy: 480.49, pupil: document.getElementById('Right_Eye_iris') }
      ];

      eyes.forEach(({ cx, cy, pupil }) => {
        const dx = svgPoint.x - cx;
        const dy = svgPoint.y - cy;
        const angle = Math.atan2(dy, dx);
        const maxOffset = 50;
        const offsetX = Math.cos(angle) * maxOffset;
        const offsetY = Math.sin(angle) * maxOffset;
        pupil.setAttribute('cx', cx + offsetX);
        pupil.setAttribute('cy', cy + offsetY);
      });
    });
  }
</script>
